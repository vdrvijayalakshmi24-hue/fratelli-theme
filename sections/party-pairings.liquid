{%- capture flickity_options -%}
{
  "prevNextButtons": false,
  "pageDots": false,
  "draggable": {% if section.blocks.size == 1 %}false{% else %}true{% endif %},
  "cellAlign": "center",
  "wrapAround": false,
  "percentPosition": false,
  "dragThreshold": 10,
  "cellSelector": ".ShopTheLook__Item",
  "arrowShape": {"x0": 20, "x1": 60, "y1": 40, "x2": 60, "y2": 35, "x3": 25},
  "breakpoints": [
    {
      "matches": "lap-and-up",
      "settings": {
        "prevNextButtons": true,
        "draggable": false,
        "wrapAround": true
      }
    }
  ]
}
{%- endcapture -%}

<section class="Section Section--spacingNormal" data-section-id="{{ section.id }}" data-section-type="shop-the-look">
  {%- if section.settings.subheading != blank or section.settings.title != blank -%}
    <header class="SectionHeader SectionHeader--center">
      <div class="Container">
        {%- if section.settings.subheading != blank -%}
          <h3 class="SectionHeader__SubHeading Heading u-h6">{{ section.settings.subheading | escape }}</h3>
        {%- endif -%}

        {%- if section.settings.title != blank -%}
          <h2 class="SectionHeader__Heading Heading u-h1">{{ section.settings.title | escape }}</h2>
        {%- endif -%}
      </div>
    </header>
  {%- endif -%}

  <div class="ShopTheLook Carousel" data-flickity-config='{{ flickity_options }}'>
    {%- for block in section.blocks -%}
      {%- if block.settings.image == blank and block.settings.product_1 == blank and block.settings.product_2 == blank and block.settings.product_3 == blank -%}
        {%- assign show_on_boarding = true -%}
      {%- else -%}
        {%- assign show_on_boarding = false -%}
      {%- endif -%}

      <div {{ block.shopify_attributes }} class="ShopTheLook__Item Carousel__Cell {% if forloop.first %}is-selected{% endif %}" id="block-{{ block.id }}" data-slide-index="{{ forloop.index0 }}">
        <div class="ShopTheLook__Inner">
          {%- comment -%}
            Implementation note 1: on desktop, we need to have a maximum height of 550px. To achieve that, we need to calculate a maximum allowed width, whose
            calculation is max_allowed_height * image_aspect_ratio
          {%- endcomment -%}

          {%- if block.settings.image -%}
            {%- assign max_width = 550 | times: block.settings.image.aspect_ratio | round -%}
          {%- else -%}
            {%- assign max_width = 550 -%}
          {%- endif -%}

          <div class="ShopTheLook__ImageWrapper" style="width: {{ max_width }}px; {% if block.settings.image %}background: url({{ block.settings.image | img_url: '1x1', format: 'jpg' }}){% endif %}">
            <div class="{% if block.settings.image %}AspectRatio AspectRatio--withFallback{% endif %}" {% if block.settings.image %}style="max-width: {{ block.settings.image.width }}px; padding-bottom: {{ 100.0 | divided_by: block.settings.image.aspect_ratio }}%; --aspect-ratio: {{ block.settings.image.aspect_ratio }}"{% endif %}>
              {%- comment -%}If we have no image and no product for the block, we display a placeholder{%- endcomment -%}
              {%- if show_on_boarding -%}
                {%- capture placeholder -%}{% cycle 'collection-1', 'collection-2', 'collection-3', 'collection-4' %}{%- endcapture -%}
                {{ placeholder | placeholder_svg_tag: 'PlaceholderSvg PlaceholderSvg--dark' }}
              {%- else -%}
                {%- if block.settings.image != blank -%}
                  {%- assign image_url = block.settings.image | img_url: '1x1', format: 'pjpg' | replace: '_1x1.', '_{width}x.' -%}
                  {%- capture supported_sizes -%}{%- render 'image-size', sizes: '200,400,600,700,800,1000,1200', image: block.settings.image -%}{%- endcapture -%}

                  <img class="ShopTheLook__Image Image--lazyLoad Image--fadeIn"
                       data-src="{{ image_url }}"
                       data-widths="[{{ supported_sizes }}]"
                       data-sizes="auto"
                       alt="{{ block.settings.image.alt | escape }}">

                  <noscript>
                    <img class="ShopTheLook__Image" src="{{ block.settings.image | img_url: '600x' }}" alt="{{ block.settings.image.alt | escape }}">
                  </noscript>
                {%- else -%}
                  {%- capture placeholder -%}{% cycle 'collection-1', 'collection-2', 'collection-3', 'collection-4' %}{%- endcapture -%}
                  {{ placeholder | placeholder_svg_tag: 'PlaceholderSvg PlaceholderSvg--dark' }}
                {%- endif -%}
              {%- endif -%}
            </div>

            {%- for i in (1..3) -%}
              {%- assign collection_setting = 'product_' | append: i -%}
              {%- assign collection = all_products[block.settings[collection_setting]] -%}

              {%- if collection == empty and show_on_boarding == false -%}
                {%- continue -%}
              {%- endif -%}

              {%- assign product_horizontal_position_setting = 'collection_' | append: i | append: '_horizontal_position' -%}
              {%- assign product_vertical_position_setting = 'collection_' | append: i | append: '_vertical_position' -%}
              {%- assign product_horizontal_position = block.settings[product_horizontal_position_setting] -%}
              {%- assign product_vertical_position = block.settings[product_vertical_position_setting] -%}

              <span class="ShopTheLook__Dot ShopTheLook__Dot--{{ block.settings.dot_style }} {% if forloop.first %}is-active{% endif %}" data-product-index="{{ i }}" style="left: {{ product_horizontal_position }}%; top: {{ product_vertical_position }}%"></span>
            {%- endfor -%}
          </div>

          {%- assign first_collection = '' -%}
          {%- assign collection_count = 0 -%}

          {%- capture party_pairings_collections -%}
            {%- if show_on_boarding -%}
              {%- for i in (1..3) -%}
                {%- assign products_count = products_count | plus: 1 -%}

                <div class="ShopTheLook__ProductItem Carousel__Cell {% if forloop.first %}is-selected{% endif %}" data-product-url="#">
                  <div class="ProductItem">
                    <div class="ProductItem__Wrapper">
                      <a href="#" class="ProductItem__ImageWrapper">
                        {%- capture placeholder -%}{% cycle 'collection-1', 'collection-2', 'collection-3' %}{%- endcapture -%}
                        {{ placeholder | placeholder_svg_tag: 'ProductItem__Image PlaceholderSvg PlaceholderSvg--dark' }}
                      </a>

                      <div class="ProductItem__Info ProductItem__Info--center">
                        <h2 class="ProductItem__Title Heading">{{ 'home_page.onboarding.product_title' | t }}</h2>

                        <div class="ProductItem__PriceList Heading">
                          <span class="ProductItem__Price Price Text--subdued">{{ 4500 | money_without_trailing_zeros }}</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              {%- endfor -%}
            {%- else -%}
              {%- for i in (1..3) -%}
                {%- assign collection_setting = 'collection' | append: i -%}
                {%- assign collection = all_collections[block.settings[collection_setting]] -%}

                {%- if collection == empty -%}
                  {%- continue -%}
                {%- endif -%}

                {%- if first_collection == blank -%}
                  {%- assign first_collection = collection -%}
                {%- endif -%}

                {%- assign collection_count = collection_count | plus: 1 -%}

                <div class="ShopTheLook__ProductItem {% unless section.settings.show_mobile_product_info %}ShopTheLook__ProductItem--withHiddenInfo{% endunless %} Carousel__Cell {% if forloop.first %}is-selected{% endif %}" data-product-url="{{ collection.url | escape }}">
                  {% render 'product-item', collection: collection, show_product_info: true, show_vendor: false, show_price_on_hover: false, show_color_swatch: false, show_labels: false %}
                </div>
              {%- endfor -%}
            {%- endif -%}
          {%- endcapture -%}

          {%- comment -%}
          IMPLEMENTATION NOTE: the products are displayed in two different ways on mobile and desktop. Unfortunately, we have to duplicate the carousel
          {%- endcomment -%}

          {%- capture flickity_desktop_inner_options -%}
          {
            "prevNextButtons": false,
            "pageDots": {% if collection_count > 1 %}true{% else %}false{% endif %},
            "draggable": false,
            "wrapAround": true,
            "cellSelector": ".ShopTheLook__ProductItem"
          }
          {%- endcapture -%}

          <div class="ShopTheLook__ProductList Carousel Carousel--fadeIn hidden-pocket" data-flickity-config='{{ flickity_desktop_inner_options }}' data-look-index="{{ forloop.index0 }}">
            {{ party_pairings_collections }}
            <a href="{{ first_collection.url }}" class="ShopTheLook__ViewButton Button Button--primary Button--full">{{ 'home_page.party_pairings.view_collection' | t }}</a>
          </div>
        </div>
      </div>

      {%- comment -%}
      IMPLEMENTATION NOTE: the popover on modal must be outside the main carousel as it is positioned using position: fixed, which does not work if inside
                           the main carousel due to the transform that create a new coordinates context
      {%- endcomment -%}

      {%- capture flickity_mobile_inner_options -%}
      {
        "prevNextButtons": false,
        "pageDots": false,
        "draggable": {% if collection_count == 1 %}false{% else %}true{% endif %},
        "wrapAround": true
      }
      {%- endcapture -%}

      <div id="block-{{ block.id }}-popover" class="Popover Popover--secondary hidden-lap-and-up" aria-hidden="true">
        <header class="Popover__Header">
          <button class="Popover__Close Icon-Wrapper--clickable" data-action="close-popover">{% render 'icon' with 'close' %}</button>
          <span class="Popover__Title Heading u-h4">{{ 'home_page.party_pairings.popover_title' | t }}</span>
        </header>

        <div class="Popover__Content">
          <div class="ShopTheLook__ProductList Carousel" data-flickity-config='{{ flickity_mobile_inner_options }}' data-look-index="{{ forloop.index0 }}">
            {{ party_pairings_collections }}
          </div>
        </div>
      </div>
    {%- endfor -%}
  </div>

  <div class="ShopTheLook__DiscoverButtonWrapper hidden-lap-and-up">
    <button class="ShopTheLook__ViewButton Button Button--primary" aria-haspopup="true" aria-expanded="false" aria-controls="block-{{ section.blocks.first.id }}-popover" data-action="open-look">
      {{- 'home_page.party_pairings.view_collection' | t -}}
    </button>
  </div>
</section>

{% schema %}
{
  "name": "Party Pairings",
  "class": "shopify-section--bordered",
  "max_blocks": 4,
  "settings": [
    {
      "type": "paragraph",
      "content": "For best results (especially on mobile), we recommend using images with the same dimensions."
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Sub-heading",
      "default": "Featured Collection"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Party Pairings"
    }
  ],
  "blocks": [
    {
      "type": "look",
      "name": "Look",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "975 x 1185px .jpg recommended (vertical image) or 1200 x 1200px .jpg recommended (square image)."
        },
        {
          "type": "select",
          "id": "dot_style",
          "label": "Hotspot style",
          "options": [
            {
              "value": "light",
              "label": "Light"
            },
            {
              "value": "dark",
              "label": "Dark"
            }
          ],
          "default": "light"
        },
        {
          "type": "header",
          "content": "Collection"
        },
        {
          "type": "collection",
          "id": "collection_1",
          "label": "Product",
          "info": "Collection not showing correctly? [Learn more](http://support.maestrooo.com/article/153-home-page-shop-the-look-section-is-displaying-incorrect-products)."
        }
      ]
    }
  ],
  "presets": [
    {
      "category": "Collection",
      "name": "Party Pairings",
      "settings": {}
    }
  ]
}
{% endschema %}