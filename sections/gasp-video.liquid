{% comment %}
  sections/first-video-and-content.liquid
  - Canvas-based video scrub section (user's FirstVideo) + content (FullSceenVideoContent).
  - Fixes and scopes GSAP animations for the "jason" content.
  - Video src: {{ 'Video_2.mp4' | asset_url }}
  - TRACK_VH = 250 (section height).
  - STEP = 1/30 (30 fps).
  - Schema max_blocks: 1.
{% endcomment %}

<section id="first-video-section-{{ section.id }}" class="first-video-section" data-section-id="{{ section.id }}">
  <style>
    /* ---------- Layout / scrub section ---------- */
    .first-vd-wrapper {
      position: relative;
      height: 150vh; /* TRACK_VH */
      width: 100%;
      overflow: visible;
      box-sizing: border-box;
      background: #000;
    }

    @media (min-width: 1024px) {
      .first-vd-wrapper {
        height: 200vh !important;
      }
    }

    .first-vd-pin {
      position: absolute; /* JS toggles absolute/fixed for reliable pin */
      top: 0;
      left: 0;
      right: 0;
      height: 100vh;
      width: 100%;
      z-index: 0;
      overflow: hidden;
      display: block;
      background: #000;
    }

    .first-vd-canvas {
      width: 100%;
      height: 100%;
      display: block;
      object-fit: cover;
      background: #000;
      image-rendering: auto;
    }

    .first-vd-video-decoder {
      position: absolute;
      opacity: 0;
      pointer-events: none;
      width: 1px;
      height: 1px;
      left: -9999px;
      top: -9999px;
    }

    /* spacer to ensure page can scroll */
    .first-vd-spacer {
      height: 1px;
    }

    /* ---------- Content area (converted from FullSceenVideoContent / Tailwind) ---------- */
    /* Container for the content — scoped by section id in DOM rather than CSS only */
    .first-video-content {
      position: relative;
      z-index: 10;
      box-sizing: border-box;
      width: 100%;
      overflow: hidden;
      padding: 0 20px;
    }

    .jason {
      position: relative;
      z-index: 10;
      margin-top: 5rem; /* fallback vertical spacing if JS not applied */
      display: flex;
      flex-direction: column;
      gap: 1.25rem;
      overflow-x: hidden;
      width: 100%;
      box-sizing: border-box;
      color: #FFFFF8;
      transform: translateY(40px); /* initial state */
      opacity: 0;                  /* initial state */
    }

    @media (max-width: 768px) {
      .jason h1 {
        margin-top: 0 !important;
      }
    }

    /* Mobile styles */
    @media (max-width: 1023px) {
      .jason img { 
        min-width: auto;
        max-width: 100%;
        height: auto;
      }
      .json h1 {
        margin-top: 0rem;
      }
    }
    
    /* Desktop styles */
    @media (min-width: 1024px) {
      .jason { 
        flex-direction: row; 
      }
      .first-video-content { 
        padding: 0; 
      }
      .jason img { 
        min-width: 700px;
      }
    }

    .jason-content {
      max-width: 56rem; /* max-w-3xl approx */
      margin-bottom: 2.5rem;
    }

    .jason h1 {
      font-family: "Utile", sans-serif;
      text-transform: uppercase;
      color: #F4CF80;
      font-size: 48px;
      margin-top: 6rem;
    }

    .jason h2 {
      font-family: "Playfair Display", serif;
      margin-bottom: 1.75rem;
      padding-right: 5rem;
      color: #FFFFF8;
      font-size: 32px;
      font-style: italic;
      letter-spacing: -0.06em;
    }

    .jason p {
      font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
      padding-right: 7rem;
      color: #FFFFF8;
      font-size: 20px;
      letter-spacing: -0.04em;
    }

    .explore-btn {
      background: #fff;
      color: #000;
      border: none;
      padding: 0.625rem 1.25rem;
      border-radius: 20px;
      font-weight: 600;
      cursor: pointer;
    }

    /* Background gradient variations used in the React component */
    .content-1 {
      position: relative;
      display: block;
      background: linear-gradient(0deg, #181B0E 74.46%, rgba(0, 0, 0, 0) 100%);
      -webkit-mask-image: linear-gradient(to bottom, transparent 0%, black 30%, black 100%);
      mask-image: linear-gradient(to bottom, transparent 0%, black 15%, black 100%);
      box-sizing: border-box;
    }

    /* small helper for the image if provided */
    .full-image {
      width: 100%;
      height: 100vh;
      object-fit: cover;
      display: block;
    }
  </style>

  <!-- ========== Scrub section (canvas + hidden video) ========== -->
  <section
    class="first-vd-wrapper"
    id="first-vd-wrapper-{{ section.id }}"
    data-track-vh="250"
    >
    <div class="first-vd-pin mobile-only" id="first-vd-pin-mobile-{{ section.id }}">
      <canvas id="first-vd-canvas-mobile-{{ section.id }}" class="first-vd-canvas" role="img" aria-label="Video scrub"></canvas>
      <video
        id="first-vd-video-mobile-{{ section.id }}"
        class="first-vd-video-decoder"
        muted
        playsinline
        preload="auto"
        webkit-playsinline
        x-webkit-airplay="allow"
      >
        <source src="https://cdn.shopify.com/videos/c/o/v/aa8ea38fecb6431ebc55c842becc04eb.mp4" type="video/mp4" />
        Your browser does not support the video tag.
      </video>
    </div>
    <div class="first-vd-pin desktop-only" id="first-vd-pin-desktop-{{ section.id }}">
      <canvas id="first-vd-canvas-desktop-{{ section.id }}" class="first-vd-canvas" role="img" aria-label="Video scrub"></canvas>
      <video
        id="first-vd-video-desktop-{{ section.id }}"
        class="first-vd-video-decoder"
        muted
        playsinline
        preload="auto"
        webkit-playsinline
        x-webkit-airplay="allow"
      >
        <source src="https://cdn.shopify.com/videos/c/o/v/aa8ea38fecb6431ebc55c842becc04eb.mp4" type="video/mp4" />
        Your browser does not support the video tag.
      </video>
    </div>
    <div class="first-vd-spacer" aria-hidden="true"></div>
  </section>

  <!-- ========== Content area (converted from FullSceenVideoContent) ========== -->
  <section class="first-video-content content-1" id="first-video-content-{{ section.id }}">
    <div class="jason" id="jason-{{ section.id }}">
      <div class="json-image" style="opacity: 1;">
        <img src="https://cdn.shopify.com/s/files/1/0491/6628/7016/files/Section_1.jpg?v=1758619356" alt="Fratelli Wines" width="700" height="532" style="object-fit: cover; margin-top: 6rem;" loading="lazy">
      </div>
      <div class="jason-content">
        <h1 id="jason-h1-{{ section.id }}">India’s finest Wine Makers</h1>
        {% comment %} <h2 id="jason-h2-{{ section.id }}">From Akluj's Soil</h2> {% endcomment %}
        <p id="jason-p-{{ section.id }}">
          From the heart of Akluj to tables across the world, Fratelli is more than wine, it’s a story of heritage, craftsmanship and seven brothers bound by a dream. Every bottle is a testament to passion and the spirit of Pour More Into Life.
        </p>

        <div style="margin-top: 1.25rem;">
          <button type="button" class="explore-btn" id="jason-btn-{{ section.id }}">Explore</button>
        </div>
      </div>
    </div>
  </section>

  <script>
    (function() {
      var sectionId = '{{ section.id }}';
      var isMobile = window.innerWidth <= 767; // Match your mobile breakpoint
      var pinSuffix = isMobile ? 'mobile' : 'desktop';
      var videoInitialized = false;
      var cleanupVideoScrub = null;
      
      function initializeVideoScrub() {
        console.log('initializeVideoScrub called');
        if (videoInitialized) {
          console.log('Video already initialized, skipping');
          return;
        }
        videoInitialized = true;
        
        // Log video element status
        const videoElement = document.getElementById('first-vd-video-' + pinSuffix + '-' + sectionId);
        console.log('Video element:', {
          exists: !!videoElement,
          readyState: videoElement?.readyState,
          currentTime: videoElement?.currentTime,
          duration: videoElement?.duration,
          paused: videoElement?.paused
        });
        
        // Initialize video scrub using centralized utility
        if (window.FratelliGSAP && typeof window.FratelliGSAP.initVideoScrub === 'function') {
          console.log('Initializing video scrub with FratelliGSAP');
          try {
            cleanupVideoScrub = window.FratelliGSAP.initVideoScrub({
              wrapperId: 'first-vd-wrapper-' + sectionId,
              pinId: 'first-vd-pin-' + pinSuffix + '-' + sectionId,
              canvasId: 'first-vd-canvas-' + pinSuffix + '-' + sectionId,
              videoId: 'first-vd-video-' + pinSuffix + '-' + sectionId,
              onReady: function(videoInfo) {
                console.log('First video scrub initialized for section:', sectionId, 'on', pinSuffix, 'Video info:', videoInfo);
                initContentAnimations();
              },
              onUpdate: function(progress, time) {
                // Optional: Add any progress-based updates here
                console.log('Video progress:', { progress, time });
              },
              onError: function(error) {
                console.error('Error initializing video scrub:', error);
              }
            });
            console.log('Video scrub initialization started');
          } catch (error) {
            console.error('Error in initVideoScrub:', error);
          }
        } else {
          console.warn('FratelliGSAP utilities not available', {
            FratelliGSAP: !!window.FratelliGSAP,
            initVideoScrub: window.FratelliGSAP ? typeof window.FratelliGSAP.initVideoScrub : 'no FratelliGSAP'
          });
        }
      }

      // Initialize immediately if page content is already visible
      if (document.getElementById('page-content')?.style.display !== 'none') {
        initializeVideoScrub();
      }
      
      // Also initialize when page content is shown
      document.addEventListener('pageContentShown', initializeVideoScrub);

      // Handle window resize
      function handleResize() {
        var newIsMobile = window.innerWidth <= 767;
        if (newIsMobile !== isMobile) {
          // If breakpoint is crossed, reload the section
          if (window.Shopify && window.Shopify.designMode) {
            window.location.reload();
          }
        }
      }

      // Add resize listener with debounce
      var resizeTimer;
      window.addEventListener('resize', function() {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(handleResize, 250);
      });

      // Cleanup on section unload
      if (window.Shopify && window.Shopify.designMode) {
        window.addEventListener('shopify:section:unload', function cleanupOnUnload() {
          if (typeof cleanupVideoScrub === 'function') {
            cleanupVideoScrub();
          }
          window.removeEventListener('resize', handleResize);
          document.removeEventListener('pageContentShown', initializeVideoScrub);
          window.removeEventListener('shopify:section:unload', cleanupOnUnload);
        });
      }

      // Initialize content animations using centralized utility
      function initContentAnimations() {
        const contentSection = document.getElementById('first-video-content-' + sectionId);
        if (!contentSection) return;
        
        const jason = contentSection.querySelector('#jason-' + sectionId) || contentSection.querySelector('.jason');
        const content1 = contentSection.classList.contains('content-1') ? 
          contentSection : contentSection.querySelector('.content-1') || contentSection;
        
        // Set initial margin
        const hasImage = !!contentSection.querySelector('.full-image');
        const initialMargin = hasImage ? '-15vh' : '-62vh';
        try { content1.style.marginTop = initialMargin; } catch (e) {}
        
        // Animate content using centralized utility
        if (window.FratelliGSAP && typeof window.FratelliGSAP.animateFadeIn === 'function') {
          window.FratelliGSAP.animateFadeIn(jason);
        } else {
          // Fallback if utility not available
          jason.style.opacity = '1';
          jason.style.transform = 'translateY(0)';
        }
      }
    })();
  </script>

  {% schema %}
  {
    "name": "First Video Canvas Scrub",
    "settings": [],
    "blocks": [],
    "max_blocks": 1,
    "presets": [
      {
        "name": "First Video Canvas Scrub"
      }
    ]
  }
  {% endschema %}
</section>
