{% comment %}
  Age Gate section (complete)
  - Uses localStorage key: "agegateConfirmed_v1"
  - Fallback assets (from assets/): Age_Gate_Back.png and GlassIamge.svg
  - Save as: sections/age-gate.liquid
{% endcomment %}

<div id="agegate-root-{{ section.id }}" class="agegate-root">
  <!-- AgeGate overlay -->
  <section id="agegate-section-{{ section.id }}" class="agegate-container relative w-full overflow-hidden" role="dialog" aria-label="Age gate">
    <!-- Background image -->
    <div class="fullscreen-glassy-overlay absolute inset-0 w-full h-full agegate-bg">
      <!-- Your content goes here -->
    </div>
    {% comment %} {% if section.settings.background_image != blank %}
      <img
        src="{{ section.settings.background_image | img_url: '2048x' }}"
        alt="Background"
        class="absolute inset-0 w-full h-full object-cover agegate-bg"
        width="2048"
        height="1152"
        style="width:100%;height:100%;object-fit:cover;"
        loading="eager"
        decoding="async"
      />
    {% else %}
      <!-- explicit fallback to your local asset Age_Gate_Back.png -->
      <img
        src="https://cdn.shopify.com/s/files/1/0491/6628/7016/files/Age_Gate_Back.jpg?v=1758620690"
        alt="Background"
        class="absolute inset-0 w-full h-full object-cover agegate-bg"
        width="2048"
        height="1152"
        style="width:100%;height:100%;object-fit:cover;"
        loading="eager"
        decoding="async"
      />
      
    {% endif %} {% endcomment %}

    <!-- Glass overlay -->
    <div class="absolute right-0 left-0 bottom-0 flex items-center justify-center pointer-events-none">
      {% if section.settings.glass_image != blank %}
        <img
          id="agegate-glass-{{ section.id }}"
          src="{{ section.settings.glass_image | img_url: '2048x' }}"
          alt="Glass overlay"
          class="w-full h-full object-cover agegate-glass"
          width="2048"
          height="1152"
          style="width:100%;object-fit:cover;transform-origin:50% 50%;"
          loading="lazy"
          decoding="async"
        />
      {% else %}
        <!-- explicit fallback to your local asset GlassIamge.svg (exact spelling) -->
        <img
          id="agegate-glass-{{ section.id }}"
          src="{{ 'age_gate_image.png' | asset_url }}"
          alt="Glass overlay"
          class="w-full h-screen object-cover agegate-glass"
          width="2048"
          height="1152"
          style="width:100%;object-fit:cover;transform-origin:50% 50%;"
          loading="lazy"
          decoding="async"
        />
      {% endif %}
    </div>

    <!-- Centered content -->
    <div id="agegate-content-{{ section.id }}" class="flex-column absolute mt-30 inset-0 flex flex-col items-center justify-center text-center text-white px-6" style="gap:20px;">
      <div class="agegate-question text-white" style="font-size:28px;max-width:35%;">
        {{ section.settings.question_text }}
      </div>

      <div class="flex gap-6">
        <button id="agegate-yes-{{ section.id }}" class="py-3 px-8 rounded border border-white bg-white text-black font-semibold">
          {{ section.settings.yes_text }}
        </button>

        <button id="agegate-no-{{ section.id }}" class="py-3 px-8 rounded border border-white bg-transparent text-white font-semibold">
          {{ section.settings.no_text }}
        </button>
      </div>
    </div>
  </section>
</div>

<style>
/* Minimal Tailwind-like utilities needed by this section */
/* Layout helpers */
.fullscreen-glassy-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  display: flex;
  align-items: center;
  justify-content: center;
}
.relative { position: relative; }
.absolute { position: absolute; }
.inset-0 { top:0; right:0; bottom:0; left:0; }
.w-full { width: 100%; }
.h-full { height: 100%; }
.h-screen { height: 100vh; }
.overflow-hidden { overflow: hidden; }
.object-cover { object-fit: cover; }

/* Flex & alignment */
.flex { display: flex; }
.items-center { align-items: center; }
.justify-center { justify-content: center; }
.text-center { text-align: center; }
.flex-column { flex-direction: column; }

/* Spacing */
.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
.mt-30 { margin-top: 7.5rem; } /* matches inline style gap in original */
.gap-6 { gap: 1.5rem; }

/* Text */
.text-white { color: #fff; }
.text-black { color: #000; }
.font-semibold { font-weight: 600; }

/* Buttons / borders */
.py-3 { padding-top: .75rem; padding-bottom: .75rem; }
.px-8 { padding-left: 2rem; padding-right: 2rem; }
.rounded { border-radius: .5rem; }
.border { border-width: 1px; border-style: solid; }
.border-white { border-color: #fff; }
.bg-white { background: #fff; }
.bg-transparent { background: transparent; }

/* Utility used for fade animations via GSAP (GSAP uses inline styles) */
.agegate-root { position: absolute; z-index: 99999; inset: 0; }
.agegate-container { z-index: 99999; height: 100%; }

/* small responsive fix for question text */
@media (max-width: 640px) {
  .agegate-question { font-size: 20px !important; max-width: 170px !important; }
  .mt-30 { margin-top: 4.5rem; }
}
</style>

<script>
  (function() {
    var sectionId = "{{ section.id }}";
    var rootSel = '#agegate-root-' + sectionId;
    var sectionSel = '#agegate-section-' + sectionId;
    var contentSel = '#agegate-content-' + sectionId;
    var glassSel = '#agegate-glass-' + sectionId;
    var yesSel = '#agegate-yes-' + sectionId;
    var noSel = '#agegate-no-' + sectionId;
    var localKey = 'agegateConfirmed_v1';

    function $(sel) { return document.querySelector(sel); }

    function hideAgeGateInstant() {
      var root = $(rootSel);
      if (root) root.style.display = 'none';
      var pageContent = document.getElementById('page-content');
      if (pageContent) {
        pageContent.style.display = 'block';
        // Dispatch a custom event to notify that the page content is now visible
        document.dispatchEvent(new CustomEvent('pageContentShown', {
          detail: { sectionId: sectionId }
        }));
      }
    }
    
    function showAgeGate() {
      var root = $(rootSel);
      if (root) root.style.display = 'block';
    }
    
    function init() {
      // If previously confirmed, skip gate
      {% comment %} var confirmed = localStorage.getItem(localKey) === 'true';
      if (confirmed) {
        hideAgeGateInstant();
        return;
      } else {
        showAgeGate();
      } {% endcomment %}
      showAgeGate();
      // Mirror React useEffect: set nav colors initially
      try {
        var navTitle = document.querySelector('.nav-title');
        var navIcon = document.querySelector('.nav-icon');
        if (navTitle) navTitle.style.color = "#8E1C21";
        if (navIcon) navIcon.style.color = "#8E1C21";
      } catch(e) { /* ignore */ }
      
      var yesBtn = $(yesSel);
      var noBtn = $(noSel);
      var content = $(contentSel);
      var glass = $(glassSel);
      var root = $(sectionSel);
      
      if (!yesBtn || !content || !glass || !root) return;
      
      yesBtn.addEventListener('click', function() {
        // Timeline: scale glass, fade out content, then mark confirmed and hide overlay
        if (window.gsap) {
          var tl = gsap.timeline({
            onComplete: function() {
              localStorage.setItem(localKey, 'true');
              const lenis = document.querySelector('html.lenis');
              if (lenis) lenis.style.overflow = 'auto';
              // fade out the whole agegate root quickly to remove from flow
              gsap.to(root, {
                autoAlpha: 0,
                duration: 0.6,
                onComplete: function() {
                  hideAgeGateInstant();
                }
              });
            }
          });
          
          tl.to(glass, { scale: 3, duration: 1.2, ease: 'power3.out' }, 0);
          tl.to(content, { autoAlpha: 0, duration: 0.6 }, 0);
        } else {
          // Fallback if GSAP is not available
          localStorage.setItem(localKey, 'true');
          hideAgeGateInstant();
        }
        
        // set nav styles to white / transparent (like React version)
        var navTitle = document.querySelector('.nav-title');
        var navIcon = document.querySelector('.nav-icon');
        var navWrapper = document.querySelector('.nav-wrapper');
        if (navTitle) navTitle.style.color = "white";
        if (navIcon) navIcon.style.color = "white";
        if (navWrapper) navWrapper.style.background = "transparent";
      });
      
      if (noBtn) {
        noBtn.addEventListener('click', function() {
          // shake the content to indicate negative response
          if (window.gsap) {
            gsap.fromTo(content, { x: -6 }, { x: 6, duration: 0.08, yoyo: true, repeat: 4 });
          }
        });
      }
    }

    // Wait for DOM and GSAP to be ready
    function checkGSAPAndInit() {
      if (window.gsap) {
        init();
      } else {
        // If GSAP isn't loaded yet, wait a bit and try again
        setTimeout(checkGSAPAndInit, 100);
      }
    }
    
    // Run init when DOM is ready and GSAP is loaded
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
      checkGSAPAndInit();
    } else {
      document.addEventListener('DOMContentLoaded', checkGSAPAndInit);
    }
  })();
</script>

{% schema %}
{
  "name": "Age Gate",
  "settings": [
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background image"
    },
    {
      "type": "image_picker",
      "id": "glass_image",
      "label": "Glass overlay image (SVG/PNG)"
    },
    {
      "type": "text",
      "id": "question_text",
      "label": "Question text",
      "default": "Before we pour, Let's confirm, Are you of legal drinking age?"
    },
    {
      "type": "text",
      "id": "yes_text",
      "label": "Yes button text",
      "default": "Yes"
    },
    {
      "type": "text",
      "id": "no_text",
      "label": "No button text",
      "default": "No"
    },
    {
      "type": "text",
      "id": "post_confirm_heading",
      "label": "Post-confirm heading (shown after confirm)",
      "default": "render content"
    },
    {
      "type": "html",
      "id": "post_confirm_html",
      "label": "Post-confirm HTML",
      "default": "<p>This content is shown after age confirmation.</p>"
    }
  ],
  "blocks": [],
  "presets": [
    {
      "name": "Age Gate",
      "category": "Popups"
    }
  ]
}
{% endschema %}
